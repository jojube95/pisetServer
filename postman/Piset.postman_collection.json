{
	"info": {
		"_postman_id": "ac64e515-ba6a-40c9-a470-1f7aec26f316",
		"name": "Piset",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.groups.length).to.eql(2);\r",
									"\r",
									"    pm.expect(body.groups[0]).to.eql({\r",
									"            \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"            \"name\": \"Group1\",\r",
									"            \"__v\": 0\r",
									"        });\r",
									"    pm.expect(body.groups[1]).to.eql({\r",
									"            \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"name\": \"Group2\",\r",
									"            \"__v\": 0\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/groups/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.groups.length).to.eql(2);\r",
									"\r",
									"    pm.expect(body.groups[0]).to.eql({\r",
									"            \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"            \"name\": \"Group1\",\r",
									"            \"__v\": 0\r",
									"        });\r",
									"    pm.expect(body.groups[1]).to.eql({\r",
									"            \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"name\": \"Group2\",\r",
									"            \"__v\": 0\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/groups/getByUser5fde50609e491a29eca1454c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"getByUser5fde50609e491a29eca1454c"
							]
						}
					},
					"response": []
				},
				{
					"name": "add",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.group.name).to.eql(\"Group3\");\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"group\": {\"name\": \"Group3\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/groups/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"nModified\": 1,\r",
									"        \"ok\": 1\r",
									"    });   \r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"group\": {\r\n        \"_id\": \"5fde502a9e491a29eca1452a\",\r\n        \"name\": \"Group4\"\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/groups/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res.users).to.eql({\r",
									"            \"n\": 8,\r",
									"            \"nModified\": 4,\r",
									"            \"ok\": 1\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.tasks).to.eql({\r",
									"            \"n\": 3,\r",
									"            \"ok\": 1,\r",
									"            \"deletedCount\": 3\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.histories).to.eql({\r",
									"            \"n\": 3,\r",
									"            \"ok\": 1,\r",
									"            \"deletedCount\": 3\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.group).to.eql({\r",
									"            \"n\": 1,\r",
									"            \"ok\": 1,\r",
									"            \"deletedCount\": 1\r",
									"        });\r",
									"\r",
									"    pm.expect(body.groupId).to.eql(\"5fde502a9e491a29eca1452a\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"groupId\": \"5fde502a9e491a29eca1452a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/groups/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "addUserToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"nModified\": 1,\r",
									"        \"ok\": 1\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"5fde50609e491a29eca14548\", \r\n    \"groupId\": \"5fde502a9e491a29eca1452a\", \r\n    \"groupName\": \"Group2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/addUserToGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"addUserToGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUserFromGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"nModified\": 1,\r",
									"        \"ok\": 1\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"5fde50609e491a29eca14547\", \r\n    \"groupId\": \"5fde502a9e491a29eca1452a\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/deleteUserFromGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"deleteUserFromGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.user.mail).to.eql(\"userNew@user.com\");\r",
									"    pm.expect(body.user.name).to.eql(\"UserNew\");\r",
									"    pm.expect(body.user.secondName).to.eql(\"UserNew\");\r",
									"    pm.expect(body.user.admin).to.eql(false);\r",
									"    pm.expect(body.user.groups).to.eql([]);\r",
									"    pm.expect(body.user.achivements).to.eql([]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"userNew@user.com\",\r\n    \"password\": \"useruser\",\r\n    \"name\": \"UserNew\",\r\n    \"secondName\": \"UserNew\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.token.length > 0).to.eql(true);\r",
									"\r",
									"    pm.expect(body.user).to.eql({\r",
									"        \"_id\": \"5fde50609e491a29eca14547\",\r",
									"        \"mail\": \"user1@user.com\",\r",
									"        \"password\": \"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\r",
									"        \"name\": \"User1\",\r",
									"        \"secondName\": \"User1\",\r",
									"        \"admin\": false,\r",
									"        \"__v\": 0,\r",
									"        \"groups\": [\r",
									"            {\r",
									"                \"group\": {\r",
									"                    \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                    \"name\": \"Group1\"\r",
									"                },\r",
									"                \"groupAdmin\": true\r",
									"            },\r",
									"            {\r",
									"                \"group\": {\r",
									"                    \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                    \"name\": \"Group2\"\r",
									"                },\r",
									"                \"groupAdmin\": false\r",
									"            }\r",
									"        ],\r",
									"        \"achivements\": [\r",
									"            {\r",
									"                \"achivementId\": \"5fde502a9e491a29eca20004\",\r",
									"                \"achivementName\": \"Create group\",\r",
									"                \"achivementDescription\": \"Create group\",\r",
									"                \"achivementCompletePoints\": 1,\r",
									"                \"currentPoints\": 1\r",
									"            }\r",
									"        ]\r",
									"    });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"user1@user.com\",\r\n    \"password\": \"useruser\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res.users).to.eql({\r",
									"            \"n\": 1,\r",
									"            \"nModified\": 1,\r",
									"            \"ok\": 1\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.tasks).to.eql({\r",
									"            \"n\": 1,\r",
									"            \"nModified\": 1,\r",
									"            \"ok\": 1\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.histories).to.eql({\r",
									"            \"n\": 1,\r",
									"            \"nModified\": 1,\r",
									"            \"ok\": 1\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"5fde50609e491a29eca14547\",\r\n    \"mail\": \"user1@user.com\",\r\n    \"password\": \"useruser\",\r\n    \"name\": \"User1Edited\",\r\n    \"secondName\": \"User1Edited\",\r\n    \"admin\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.users).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14546\",\r",
									"            \"mail\": \"admin@admin.com\",\r",
									"            \"password\": \"$2b$10$bSDt0f9x8ktE7PYdPdtsk.cj/koxxFlN/RGilbR6KD1JN3LUh3XN2\",\r",
									"            \"name\": \"Admin\",\r",
									"            \"secondName\": \"Admin\",\r",
									"            \"admin\": true,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [],\r",
									"            \"achivements\": []\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14547\",\r",
									"            \"mail\": \"user1@user.com\",\r",
									"            \"password\": \"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\r",
									"            \"name\": \"User1\",\r",
									"            \"secondName\": \"User1\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": true\r",
									"                },\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20004\",\r",
									"                    \"achivementName\": \"Create group\",\r",
									"                    \"achivementDescription\": \"Create group\",\r",
									"                    \"achivementCompletePoints\": 1,\r",
									"                    \"currentPoints\": 1\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14548\",\r",
									"            \"mail\": \"user2@user.com\",\r",
									"            \"password\": \"$2b$10$HX7y6VRdrrg36cxULkXJmelRLwhK2/MkIF9Lhu6KuWXZaRcodc8dS\",\r",
									"            \"name\": \"User2\",\r",
									"            \"secondName\": \"User2\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 9\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 9\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14549\",\r",
									"            \"mail\": \"user3@user.com\",\r",
									"            \"password\": \"$2b$10$seZlCzm9ikwvkQs/6xLH7eojNY2vMT/5IcPeqxj95.gqP/.OB6qca\",\r",
									"            \"name\": \"User3\",\r",
									"            \"secondName\": \"User3\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 10\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454a\",\r",
									"            \"mail\": \"user4@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User4\",\r",
									"            \"secondName\": \"User4\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454b\",\r",
									"            \"mail\": \"user5@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User5\",\r",
									"            \"secondName\": \"User5\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": true\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454c\",\r",
									"            \"mail\": \"user6@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User6\",\r",
									"            \"secondName\": \"User6\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20003\",\r",
									"                    \"achivementName\": \"Accept invitation\",\r",
									"                    \"achivementDescription\": \"Accept group invitation\",\r",
									"                    \"achivementCompletePoints\": 1,\r",
									"                    \"currentPoints\": 1\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454d\",\r",
									"            \"mail\": \"user7@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User7\",\r",
									"            \"secondName\": \"User7\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByMail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.user).to.eql({\r",
									"        \"_id\": \"5fde50609e491a29eca14547\",\r",
									"        \"mail\": \"user1@user.com\",\r",
									"        \"password\": \"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\r",
									"        \"name\": \"User1\",\r",
									"        \"secondName\": \"User1\",\r",
									"        \"admin\": false,\r",
									"        \"__v\": 0,\r",
									"        \"groups\": [\r",
									"            {\r",
									"                \"group\": {\r",
									"                    \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                    \"name\": \"Group1\"\r",
									"                },\r",
									"                \"groupAdmin\": true\r",
									"            },\r",
									"            {\r",
									"                \"group\": {\r",
									"                    \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                    \"name\": \"Group2\"\r",
									"                },\r",
									"                \"groupAdmin\": false\r",
									"            }\r",
									"        ],\r",
									"        \"achivements\": [\r",
									"            {\r",
									"                \"achivementId\": \"5fde502a9e491a29eca20004\",\r",
									"                \"achivementName\": \"Create group\",\r",
									"                \"achivementDescription\": \"Create group\",\r",
									"                \"achivementCompletePoints\": 1,\r",
									"                \"currentPoints\": 1\r",
									"            }\r",
									"        ]\r",
									"    });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/getByEmailuser1@user.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"getByEmailuser1@user.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.users).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14547\",\r",
									"            \"mail\": \"user1@user.com\",\r",
									"            \"password\": \"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\r",
									"            \"name\": \"User1\",\r",
									"            \"secondName\": \"User1\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": true\r",
									"                },\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20004\",\r",
									"                    \"achivementName\": \"Create group\",\r",
									"                    \"achivementDescription\": \"Create group\",\r",
									"                    \"achivementCompletePoints\": 1,\r",
									"                    \"currentPoints\": 1\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14548\",\r",
									"            \"mail\": \"user2@user.com\",\r",
									"            \"password\": \"$2b$10$HX7y6VRdrrg36cxULkXJmelRLwhK2/MkIF9Lhu6KuWXZaRcodc8dS\",\r",
									"            \"name\": \"User2\",\r",
									"            \"secondName\": \"User2\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 9\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 9\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14549\",\r",
									"            \"mail\": \"user3@user.com\",\r",
									"            \"password\": \"$2b$10$seZlCzm9ikwvkQs/6xLH7eojNY2vMT/5IcPeqxj95.gqP/.OB6qca\",\r",
									"            \"name\": \"User3\",\r",
									"            \"secondName\": \"User3\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 10\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454a\",\r",
									"            \"mail\": \"user4@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User4\",\r",
									"            \"secondName\": \"User4\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca14528\",\r",
									"                        \"name\": \"Group1\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/getByGroup5fde502a9e491a29eca14528",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"getByGroup5fde502a9e491a29eca14528"
							]
						}
					},
					"response": []
				},
				{
					"name": "getWithoutGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.users).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca14546\",\r",
									"            \"mail\": \"admin@admin.com\",\r",
									"            \"password\": \"$2b$10$bSDt0f9x8ktE7PYdPdtsk.cj/koxxFlN/RGilbR6KD1JN3LUh3XN2\",\r",
									"            \"name\": \"Admin\",\r",
									"            \"secondName\": \"Admin\",\r",
									"            \"admin\": true,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [],\r",
									"            \"achivements\": []\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454b\",\r",
									"            \"mail\": \"user5@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User5\",\r",
									"            \"secondName\": \"User5\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": true\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454c\",\r",
									"            \"mail\": \"user6@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User6\",\r",
									"            \"secondName\": \"User6\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20003\",\r",
									"                    \"achivementName\": \"Accept invitation\",\r",
									"                    \"achivementDescription\": \"Accept group invitation\",\r",
									"                    \"achivementCompletePoints\": 1,\r",
									"                    \"currentPoints\": 1\r",
									"                }\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50609e491a29eca1454d\",\r",
									"            \"mail\": \"user7@user.com\",\r",
									"            \"password\": \"$2b$10$moCoPvFUlqL2Yv9uNcg7m.MHSr4fk5vwFjwY0exzz0ehUmU5u9bP6\",\r",
									"            \"name\": \"User7\",\r",
									"            \"secondName\": \"User7\",\r",
									"            \"admin\": false,\r",
									"            \"__v\": 0,\r",
									"            \"groups\": [\r",
									"                {\r",
									"                    \"group\": {\r",
									"                        \"_id\": \"5fde502a9e491a29eca1452a\",\r",
									"                        \"name\": \"Group2\"\r",
									"                    },\r",
									"                    \"groupAdmin\": false\r",
									"                }\r",
									"            ],\r",
									"            \"achivements\": [\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"                    \"achivementName\": \"Task Completer 10\",\r",
									"                    \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"                    \"achivementCompletePoints\": 10,\r",
									"                    \"currentPoints\": 10\r",
									"                },\r",
									"                {\r",
									"                    \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"                    \"achivementName\": \"Task Completer 100\",\r",
									"                    \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"                    \"achivementCompletePoints\": 100,\r",
									"                    \"currentPoints\": 20\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/getWithoutGroup5fde502a9e491a29eca14528",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"getWithoutGroup5fde502a9e491a29eca14528"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "devices",
			"item": [
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.devices).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca16001\",\r",
									"            \"deviceId\": \"X1\",\r",
									"            \"userId\": \"5fde50609e491a29eca14546\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca16002\",\r",
									"            \"deviceId\": \"X2\",\r",
									"            \"userId\": \"5fde50609e491a29eca14546\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/devices/getByUser5fde50609e491a29eca14546",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"devices",
								"getByUser5fde50609e491a29eca14546"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "invitations",
			"item": [
				{
					"name": "getByGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.invitations).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca17001\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454b\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca17002\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca17003\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454d\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/invitations/getByGroup5fde502a9e491a29eca1452a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"invitations",
								"getByGroup5fde502a9e491a29eca1452a"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.invitations).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca17002\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/invitations/getByUser5fde50609e491a29eca1454c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"invitations",
								"getByUser5fde50609e491a29eca1454c"
							]
						}
					},
					"response": []
				},
				{
					"name": "invite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.invitation.groupId).to.eql(\"5fde502a9e491a29eca1452a\");\r",
									"    pm.expect(body.invitation.groupName).to.eql(\"Group2\");\r",
									"    pm.expect(body.invitation.userId).to.eql(\"5fde50609e491a29eca1454d\");\r",
									"    pm.expect(body.invitation.userName).to.eql(\"User7\");\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"invitation\": {\r\n        \"groupId\": \"5fde502a9e491a29eca1452a\",\r\n        \"groupName\": \"Group2\",\r\n        \"userId\": \"5fde50609e491a29eca1454d\",\r\n        \"userName\": \"User7\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/invitations/invite",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"invitations",
								"invite"
							]
						}
					},
					"response": []
				},
				{
					"name": "accept",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res.user).to.eql({\r",
									"            \"n\": 1,\r",
									"            \"nModified\": 1,\r",
									"            \"ok\": 1\r",
									"        });\r",
									"\r",
									"    pm.expect(body.res.invitation).to.eql({\r",
									"            \"n\": 0,\r",
									"            \"ok\": 1,\r",
									"            \"deletedCount\": 0\r",
									"        });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"invitation\": {\r\n        \"groupId\": \"5fde502a9e491a29eca14528\",\r\n        \"groupName\": \"Group1\",\r\n        \"userId\": \"5fde50609e491a29eca1454d\",\r\n        \"userName\": \"User7\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/invitations/accept",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"invitations",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "decline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"ok\": 1,\r",
									"        \"deletedCount\": 1\r",
									"    });\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"invitation\": {\r\n        \"_id\": \"5fde502a9e491a29eca17001\",\r\n        \"groupId\": \"5fde502a9e491a29eca1452a\",\r\n        \"userId\": \"5fde50609e491a29eca1454d\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/invitations/decline",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"invitations",
								"decline"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "getByGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.tasks).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14543\",\r",
									"            \"name\": \"Task5\",\r",
									"            \"description\": \"Task5Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454b\",\r",
									"            \"userName\": \"User5\",\r",
									"            \"dateIni\": \"2020-10-30T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-11-06T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"                \"name\": \"Doing\"\r",
									"            },\r",
									"            \"estimatedTime\": 60,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14544\",\r",
									"            \"name\": \"Task6\",\r",
									"            \"description\": \"Task6Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"userName\": \"User6\",\r",
									"            \"dateIni\": \"2020-11-26T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-05T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"                \"name\": \"Doing\"\r",
									"            },\r",
									"            \"estimatedTime\": 150,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14545\",\r",
									"            \"name\": \"Task7\",\r",
									"            \"description\": \"Task7Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454d\",\r",
									"            \"userName\": \"User7\",\r",
									"            \"dateIni\": \"2020-11-28T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-06T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18003\",\r",
									"                \"name\": \"Finished\"\r",
									"            },\r",
									"            \"estimatedTime\": 320,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/tasks/getByGroup5fde502a9e491a29eca1452a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"getByGroup5fde502a9e491a29eca1452a"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.tasks).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca1453f\",\r",
									"            \"name\": \"Task1\",\r",
									"            \"description\": \"Task1Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca14528\",\r",
									"            \"groupName\": \"Group1\",\r",
									"            \"userId\": \"5fde50609e491a29eca14547\",\r",
									"            \"userName\": \"User1\",\r",
									"            \"dateIni\": \"2020-09-29T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-10-02T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18000\",\r",
									"                \"name\": \"Pending\"\r",
									"            },\r",
									"            \"estimatedTime\": 120,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14540\",\r",
									"            \"name\": \"Task2\",\r",
									"            \"description\": \"Task2Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca14528\",\r",
									"            \"groupName\": \"Group1\",\r",
									"            \"userId\": \"5fde50609e491a29eca14548\",\r",
									"            \"userName\": \"User2\",\r",
									"            \"dateIni\": \"2020-11-29T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-01T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18002\",\r",
									"                \"name\": \"Delivered\"\r",
									"            },\r",
									"            \"estimatedTime\": 125,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14541\",\r",
									"            \"name\": \"Task3\",\r",
									"            \"description\": \"Task3Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca14528\",\r",
									"            \"groupName\": \"Group1\",\r",
									"            \"userId\": \"5fde50609e491a29eca14549\",\r",
									"            \"userName\": \"User3\",\r",
									"            \"dateIni\": \"2020-11-10T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-11-15T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18000\",\r",
									"                \"name\": \"Pending\"\r",
									"            },\r",
									"            \"estimatedTime\": 220,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14542\",\r",
									"            \"name\": \"Task4\",\r",
									"            \"description\": \"Task4Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca14528\",\r",
									"            \"groupName\": \"Group1\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454a\",\r",
									"            \"userName\": \"User4\",\r",
									"            \"dateIni\": \"2020-10-28T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-11-01T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18000\",\r",
									"                \"name\": \"Pending\"\r",
									"            },\r",
									"            \"estimatedTime\": 130,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14543\",\r",
									"            \"name\": \"Task5\",\r",
									"            \"description\": \"Task5Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454b\",\r",
									"            \"userName\": \"User5\",\r",
									"            \"dateIni\": \"2020-10-30T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-11-06T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"                \"name\": \"Doing\"\r",
									"            },\r",
									"            \"estimatedTime\": 60,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14544\",\r",
									"            \"name\": \"Task6\",\r",
									"            \"description\": \"Task6Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"userName\": \"User6\",\r",
									"            \"dateIni\": \"2020-11-26T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-05T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"                \"name\": \"Doing\"\r",
									"            },\r",
									"            \"estimatedTime\": 150,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14545\",\r",
									"            \"name\": \"Task7\",\r",
									"            \"description\": \"Task7Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454d\",\r",
									"            \"userName\": \"User7\",\r",
									"            \"dateIni\": \"2020-11-28T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-06T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18003\",\r",
									"                \"name\": \"Finished\"\r",
									"            },\r",
									"            \"estimatedTime\": 320,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/tasks/getByUserGroups?user={\"mail\":\"user1@user.com\",\"password\":\"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\"name\":\"User1\",\"secondName\":\"User1\",\"admin\":false,\"groups\":[{\"groupId\":\"5fde502a9e491a29eca14528\",\"groupName\":\"Group1\",\"groupAdmin\":true},{\"groupId\":\"5fde502a9e491a29eca1452a\",\"groupName\":\"Group2\",\"groupAdmin\":false}],\"achivements\":[{\"achivementId\":\"5fde502a9e491a29eca20004\",\"achivementName\":\"Create group\",\"achivementDescription\":\"Create group\",\"achivementCompletePoints\":1,\"currentPoints\":1}],\"_id\":\"5fde50609e491a29eca14547\"}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"getByUserGroups"
							],
							"query": [
								{
									"key": "user",
									"value": "{\"mail\":\"user1@user.com\",\"password\":\"$2b$10$0HqHTbfG6lSlwpFjXIfj0eQCge7EZDUA77cEj4/kWMqZiIpiXCwdi\",\"name\":\"User1\",\"secondName\":\"User1\",\"admin\":false,\"groups\":[{\"groupId\":\"5fde502a9e491a29eca14528\",\"groupName\":\"Group1\",\"groupAdmin\":true},{\"groupId\":\"5fde502a9e491a29eca1452a\",\"groupName\":\"Group2\",\"groupAdmin\":false}],\"achivements\":[{\"achivementId\":\"5fde502a9e491a29eca20004\",\"achivementName\":\"Create group\",\"achivementDescription\":\"Create group\",\"achivementCompletePoints\":1,\"currentPoints\":1}],\"_id\":\"5fde50609e491a29eca14547\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.tasks).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14544\",\r",
									"            \"name\": \"Task6\",\r",
									"            \"description\": \"Task6Description\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"userName\": \"User6\",\r",
									"            \"dateIni\": \"2020-11-26T16:35:19.000Z\",\r",
									"            \"dateEnd\": \"2020-12-05T16:35:19.000Z\",\r",
									"            \"state\": {\r",
									"                \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"                \"name\": \"Doing\"\r",
									"            },\r",
									"            \"estimatedTime\": 150,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/tasks/getByUser5fde50609e491a29eca1454c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"getByUser5fde50609e491a29eca1454c"
							]
						}
					},
					"response": []
				},
				{
					"name": "addToGroup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp1 = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp1\", current_timestamp1.toISOString());\r",
									"\r",
									"var current_timestamp2 = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp2\", current_timestamp2.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res.name).to.eql(\"Task8\");\r",
									"    pm.expect(body.res.description).to.eql(\"Task8 description\");\r",
									"    pm.expect(body.res.estimatedTime).to.eql(60);\r",
									"    pm.expect(body.res.state.name).to.eql(\"ToDo\");\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"task\":{\r\n        \"name\": \"Task8\",\r\n        \"description\": \"Task8 description\",\r\n        \"groupId\": \"5fde502a9e491a29eca14528\",\r\n        \"groupName\": \"Group1\",\r\n        \"dateIni\": \"{{current_timestamp1}}\",\r\n        \"dateEnd\": \"{{current_timestamp2}}\",\r\n        \"estimatedTime\": 60,\r\n        \"state\":  {\"name\": \"ToDo\"}        \r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/tasks/addToGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"addToGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp1 = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp1\", current_timestamp1.toISOString());\r",
									"\r",
									"var current_timestamp2 = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp2\", current_timestamp2.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"nModified\": 1,\r",
									"        \"ok\": 1\r",
									"    });    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"task\":{\r\n        \"_id\": \"5fde50579e491a29eca14540\",\r\n        \"name\": \"Task2Edit\",\r\n        \"description\": \"Task2 description edit\",\r\n        \"groupId\": \"5fde502a9e491a29eca14528\",\r\n        \"groupName\": \"Group1\",\r\n        \"dateIni\": \"{{current_timestamp1}}\",\r\n        \"dateEnd\": \"{{current_timestamp2}}\",\r\n        \"estimatedTime\": 32,\r\n        \"state\":  {\r\n            \"name\": \"Doing\"\r\n        }        \r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/tasks/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFromGroup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.res).to.eql({\r",
									"        \"n\": 1,\r",
									"        \"ok\": 1,\r",
									"        \"deletedCount\": 1\r",
									"    });    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"taskId\": \"5fde50579e491a29eca1453f\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/tasks/deleteFromGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								"deleteFromGroup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "histories",
			"item": [
				{
					"name": "getByGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.histories).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fdf743e0eb4dc2bc464355f\",\r",
									"            \"taskId\": \"5fde50579e491a29eca14543\",\r",
									"            \"taskName\": \"Task5\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454b\",\r",
									"            \"userName\": \"User5\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"date\": \"2020-11-30T16:35:19.000Z\",\r",
									"            \"action\": \"Finish\",\r",
									"            \"time\": 20,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14544\",\r",
									"            \"taskId\": \"5fde504d9e491a29eca14535\",\r",
									"            \"taskName\": \"Task6\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"userName\": \"User6\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"date\": \"2020-11-30T16:35:19.000Z\",\r",
									"            \"action\": \"Work\",\r",
									"            \"time\": 40,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14545\",\r",
									"            \"taskId\": \"5fde504d9e491a29eca14535\",\r",
									"            \"taskName\": \"Task7\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454d\",\r",
									"            \"userName\": \"User7\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"date\": \"2020-11-30T16:35:19.000Z\",\r",
									"            \"action\": \"Work\",\r",
									"            \"time\": 30,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/histories/getByGroup5fde502a9e491a29eca1452a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"histories",
								"getByGroup5fde502a9e491a29eca1452a"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.histories).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde50579e491a29eca14544\",\r",
									"            \"taskId\": \"5fde504d9e491a29eca14535\",\r",
									"            \"taskName\": \"Task6\",\r",
									"            \"userId\": \"5fde50609e491a29eca1454c\",\r",
									"            \"userName\": \"User6\",\r",
									"            \"groupId\": \"5fde502a9e491a29eca1452a\",\r",
									"            \"groupName\": \"Group2\",\r",
									"            \"date\": \"2020-11-30T16:35:19.000Z\",\r",
									"            \"action\": \"Work\",\r",
									"            \"time\": 40,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/histories/getByUser5fde50609e491a29eca1454c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"histories",
								"getByUser5fde50609e491a29eca1454c"
							]
						}
					},
					"response": []
				},
				{
					"name": "addHistory",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();\r",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.history.taskId).to.eql(\"5fde50579e491a29eca1453f\");\r",
									"    pm.expect(body.history.taskName).to.eql(\"Task1\");\r",
									"    pm.expect(body.history.userId).to.eql(\"5fde50609e491a29eca14547\");\r",
									"    pm.expect(body.history.userName).to.eql(\"User1\");\r",
									"    pm.expect(body.history.groupId).to.eql(\"5fde502a9e491a29eca14528\");\r",
									"    pm.expect(body.history.groupName).to.eql(\"Group1\");\r",
									"    pm.expect(body.history.action).to.eql(\"Finished\");\r",
									"    pm.expect(body.history.time).to.eql(73);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"history\": {\r\n        \"taskId\": \"5fde50579e491a29eca1453f\",\r\n        \"taskName\": \"Task1\",\r\n        \"userId\": \"5fde50609e491a29eca14547\",\r\n        \"userName\": \"User1\",\r\n        \"groupId\": \"5fde502a9e491a29eca14528\",\r\n        \"groupName\": \"Group1\",\r\n        \"date\": \"{{current_timestamp}}\",\r\n        \"action\": \"Finished\",\r\n        \"time\": 73\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/histories/addHistory",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"histories",
								"addHistory"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test",
			"item": [
				{
					"name": "restoreDatabase",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/test/restoreDatabasetest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"test",
								"restoreDatabasetest"
							]
						}
					},
					"response": []
				},
				{
					"name": "exportDatabase",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/test/exportDatabasetest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"test",
								"exportDatabasetest"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "achivements",
			"item": [
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.achivements).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca20001\",\r",
									"            \"name\": \"Task Completer 10\",\r",
									"            \"description\": \"Complete 10 Tasks\",\r",
									"            \"completePoints\": 10,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca20002\",\r",
									"            \"name\": \"Task Completer 100\",\r",
									"            \"description\": \"Complete 100 Tasks\",\r",
									"            \"completePoints\": 100,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca20003\",\r",
									"            \"name\": \"Accept invitation\",\r",
									"            \"description\": \"Accept group invitation\",\r",
									"            \"completePoints\": 1,\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca20004\",\r",
									"            \"name\": \"Create group\",\r",
									"            \"description\": \"Create group\",\r",
									"            \"completePoints\": 1,\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/achivements/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"achivements",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.achivements).to.eql([\r",
									"        {\r",
									"            \"achivementId\": \"5fde502a9e491a29eca20001\",\r",
									"            \"achivementName\": \"Task Completer 10\",\r",
									"            \"achivementDescription\": \"Complete 10 Tasks\",\r",
									"            \"achivementCompletePoints\": 10,\r",
									"            \"currentPoints\": 10\r",
									"        },\r",
									"        {\r",
									"            \"achivementId\": \"5fde502a9e491a29eca20002\",\r",
									"            \"achivementName\": \"Task Completer 100\",\r",
									"            \"achivementDescription\": \"Complete 100 Tasks\",\r",
									"            \"achivementCompletePoints\": 100,\r",
									"            \"currentPoints\": 10\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/achivements/getByUser5fde50609e491a29eca14549",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"achivements",
								"getByUser5fde50609e491a29eca14549"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "states",
			"item": [
				{
					"name": "get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respond should be json\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    var body = pm.response.json();\r",
									"    pm.expect(body.message).to.eql(\"Success\");\r",
									"\r",
									"    pm.expect(body.states).to.eql([\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca18000\",\r",
									"            \"name\": \"Pending\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca18001\",\r",
									"            \"name\": \"Doing\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca18002\",\r",
									"            \"name\": \"Delivered\",\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        {\r",
									"            \"_id\": \"5fde502a9e491a29eca18003\",\r",
									"            \"name\": \"Finished\",\r",
									"            \"__v\": 0\r",
									"        }\r",
									"    ]);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/states/get",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"states",
								"get"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest(\"http://localhost:3000/api/test/restoreDatabasetest\", function (err, response) {",
					"    console.log(response.json());",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}